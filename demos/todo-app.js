// Generated by HTMS - CommonJS format
'use strict';

let state = { 'todos': [] };
const div4 = document.createElement('div');
div4.setAttribute('id', 'todoApp');
const h21 = document.createElement('h2');
h21.textContent = `HTMS Todo`;
div4.appendChild(h21);
const input2 = document.createElement('input');
input2.setAttribute('type', 'text');
input2.setAttribute('id', 'newTodo');
input2.setAttribute('placeholder', 'Add a task');
div4.appendChild(input2);
const button5 = document.createElement('button');
button5.setAttribute('id', 'addBtn');
button5.textContent = `Add`;
div4.appendChild(button5);
const ul5 = document.createElement('ul');
ul5.setAttribute('id', 'list');
div4.appendChild(ul5);
document.body.appendChild(div4);
try {
  const eventTargets = document.querySelectorAll(`#addBtn`);
  if (eventTargets.length === 0) {
    console.warn('No elements found for event target: #addBtn');
  }
  eventTargets.forEach(element => {
    element.addEventListener('click', function (event) {
      try {
        addTodo();
      } catch (error) {
        console.error('Event handler error:', error);
      }
    });
  });
} catch (error) {
  console.error('Event setup failed:', error);
}
try {
  const eventTargets = document.querySelectorAll(`#newTodo`);
  if (eventTargets.length === 0) {
    console.warn('No elements found for event target: #newTodo');
  }
  eventTargets.forEach(element => {
    element.addEventListener('keypress', function (event) {
      try {
        onEnter(event);
      } catch (error) {
        console.error('Event handler error:', error);
      }
    });
  });
} catch (error) {
  console.error('Event setup failed:', error);
}
function onEnter(event) {
  try {
    if (event.key === 'Enter') {
      addTodo();
    }
    // else ignore
    return;
  } catch (error) {
    console.error('Function onEnter execution error:', error);
  }
}
function render() {
  try {
    (function () {
      try {
        const el = document.querySelector(`#list`);
        if (!el) {
          console.warn('SETPROP target not found: #list');
          return;
        }
        el['textContent'] = '';
      } catch (error) {
        console.error('SETPROP failed:', error);
      }
    }());
    const __appendTarget2 = document.querySelector(`#list`);
    if (!__appendTarget2) {
      console.warn('APPEND target not found: #list');
    } else {
    }
  } catch (error) {
    console.error('Function render execution error:', error);
  }
}
function addTodo() {
  try {
    (function () {
      try {
        state.todos.push('document.getElementById(\'newTodo\').value');
      } catch (error) {
        console.error('PUSH failed:', error);
      }
      if (typeof window !== 'undefined' && window.__htms) {
        window.__htms.notify();
      }
    }());
    (function () {
      try {
        const el = document.querySelector(`#newTodo`);
        if (!el) {
          console.warn('SETPROP target not found: #newTodo');
          return;
        }
        el['value'] = '';
      } catch (error) {
        console.error('SETPROP failed:', error);
      }
    }());
  } catch (error) {
    console.error('Function addTodo execution error:', error);
  }
}